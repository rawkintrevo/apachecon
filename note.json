{
  "paragraphs": [
    {
      "text": "%md\n\n# Everyone Plays: Collaborative Data Science with Apache Zeppelin\n*trevor grant, aka @rawkintrevo*\n\n\n_",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 9:53:11 AM",
      "config": {
        "colWidth": 8.0,
        "graph": {
          "mode": "table",
          "height": 87.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461343126578_1649213137",
      "id": "20160422-113846_252676000",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eEveryone Plays: Collaborative Data Science with Apache Zeppelin\u003c/h1\u003e\n\u003cp\u003e\u003cem\u003etrevor grant, aka @rawkintrevo\u003c/em\u003e\u003c/p\u003e\n\u003cp\u003e_\u003c/p\u003e\n"
      },
      "dateCreated": "Apr 22, 2016 11:38:46 AM",
      "dateStarted": "Apr 23, 2016 9:53:09 AM",
      "dateFinished": "Apr 23, 2016 9:53:09 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "about the author",
      "text": "%md\n\n__*trevor grant*__\n*r\u0026d data scientist at market6*\n*trevor.d.grant@gmail.com*\n*@rawkintrevo*\n*[http://github.com/rawkintrevo](http://github.com/rawkintrevo)*",
      "authenticationInfo": {},
      "dateUpdated": "Apr 22, 2016 11:42:44 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461343216883_252898082",
      "id": "20160422-114016_1287710326",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003e\u003cstrong\u003e\u003cem\u003etrevor grant\u003c/em\u003e\u003c/strong\u003e\n\u003cbr  /\u003e\u003cem\u003er\u0026amp;d data scientist at market6\u003c/em\u003e\n\u003cbr  /\u003e\u003cem\u003etrevor.d.grant@gmail.com\u003c/em\u003e\n\u003cbr  /\u003e\u003cem\u003e@rawkintrevo\u003c/em\u003e\n\u003cbr  /\u003e\u003cem\u003e\u003ca href\u003d\"http://github.com/rawkintrevo\"\u003ehttp://github.com/rawkintrevo\u003c/a\u003e\u003c/em\u003e\u003c/p\u003e\n"
      },
      "dateCreated": "Apr 22, 2016 11:40:16 AM",
      "dateStarted": "Apr 22, 2016 11:42:34 AM",
      "dateFinished": "Apr 22, 2016 11:42:34 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Overview\n\n##### Prologue\n\n#### Chapter 1. Collaboration Among Apache Products\n\n#### Chapter 2. Intra-Organizational Collaboration\n\n#### Chapter 3. Usecasing",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 9:53:24 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": false,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461343325859_762426574",
      "id": "20160422-114205_265679647",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eOverview\u003c/h2\u003e\n\u003ch5\u003ePrologue\u003c/h5\u003e\n\u003ch4\u003eChapter 1. Collaboration Among Apache Products\u003c/h4\u003e\n\u003ch4\u003eChapter 2. Intra-Organizational Collaboration\u003c/h4\u003e\n\u003ch4\u003eChapter 3. Usecasing\u003c/h4\u003e\n"
      },
      "dateCreated": "Apr 22, 2016 11:42:05 AM",
      "dateStarted": "Apr 23, 2016 9:53:21 AM",
      "dateFinished": "Apr 23, 2016 9:53:21 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Prologue...",
      "text": "%md\n\n## What *is* Apache Zeppelin?!\n\n- Paragraph-Web based interpretter for a whole galaxy of Big Data Products\n- Dynamic forms and \u0027pre built\u0027 visualizations for data exploration.\n- Extendable!\n    - Integration with AngularJS for pretty demos (beyond prepackaged).\n    - Connects to non-Apache products via JDBC interpretter (or home-brew your own)\n- `ResourcePool` allows for variable sharing between interpreters\n- Version control built in\n- And more...",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 8:55:38 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461343454155_-658250255",
      "id": "20160422-114414_2114001232",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eWhat \u003cem\u003eis\u003c/em\u003e Apache Zeppelin?!\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eParagraph-Web based interpretter for a whole galaxy of Big Data Products\u003c/li\u003e\n\u003cli\u003eDynamic forms and \u0027pre built\u0027 visualizations for data exploration.\u003c/li\u003e\n\u003cli\u003eExtendable!\u003cul\u003e\n\u003cli\u003eIntegration with AngularJS for pretty demos (beyond prepackaged).\u003c/li\u003e\n\u003cli\u003eConnects to non-Apache products via JDBC interpretter (or home-brew your own)\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eResourcePool\u003c/code\u003e allows for variable sharing between interpreters\u003c/li\u003e\n\u003cli\u003eVersion control built in\u003c/li\u003e\n\u003cli\u003eAnd more\u0026hellip;\u003c/li\u003e\n\u003c/ul\u003e\n"
      },
      "dateCreated": "Apr 22, 2016 11:44:14 AM",
      "dateStarted": "Apr 25, 2016 8:55:38 AM",
      "dateFinished": "Apr 25, 2016 8:55:39 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nHello World!",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:33:39 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461343826726_-715686231",
      "id": "20160422-115026_448983249",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eHello World!\u003c/p\u003e\n"
      },
      "dateCreated": "Apr 22, 2016 11:50:26 AM",
      "dateStarted": "Apr 23, 2016 11:33:39 AM",
      "dateFinished": "Apr 23, 2016 11:33:39 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nprintln(\"hello Spark\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:33:25 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461344128205_1873718194",
      "id": "20160422-115528_1481602958",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "hello Spark\n"
      },
      "dateCreated": "Apr 22, 2016 11:55:28 AM",
      "dateStarted": "Apr 23, 2016 11:33:22 AM",
      "dateFinished": "Apr 23, 2016 11:33:23 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%flink\n\nprintln(\"hello Flink\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:33:28 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461344164858_-1385642980",
      "id": "20160422-115604_336866583",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "hello Flink\n"
      },
      "dateCreated": "Apr 22, 2016 11:56:04 AM",
      "dateStarted": "Apr 22, 2016 11:56:39 AM",
      "dateFinished": "Apr 22, 2016 11:56:48 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql\n\nshow tables",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:34:18 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "tableName",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "isTemporary",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "tableName",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "isTemporary",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461344188674_-2069695876",
      "id": "20160422-115628_982297488",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "tableName\tisTemporary\n"
      },
      "dateCreated": "Apr 22, 2016 11:56:28 AM",
      "dateStarted": "Apr 23, 2016 11:34:18 AM",
      "dateFinished": "Apr 23, 2016 11:34:19 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%pyspark\n\nprint \"Hi world.\"",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:34:26 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461429237715_1626307546",
      "id": "20160423-113357_1522363245",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "Hi world.\n"
      },
      "dateCreated": "Apr 23, 2016 11:33:57 AM",
      "dateStarted": "Apr 23, 2016 11:34:19 AM",
      "dateFinished": "Apr 23, 2016 11:34:19 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%r\n\nprint(\"hello, world.\") #need to upgrade R and install dependencies..",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:37:06 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461429269040_-2133043308",
      "id": "20160423-113429_1509632745",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "java.lang.RuntimeException: Error in library(\"knitr\"): there is no package called ‘knitr’\n\n\tat org.apache.zeppelin.spark.ZeppelinR.request(ZeppelinR.java:254)\n\tat org.apache.zeppelin.spark.ZeppelinR.eval(ZeppelinR.java:179)\n\tat org.apache.zeppelin.spark.SparkRInterpreter.open(SparkRInterpreter.java:111)\n\tat org.apache.zeppelin.interpreter.ClassloaderInterpreter.open(ClassloaderInterpreter.java:74)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.open(LazyOpenInterpreter.java:68)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:92)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:345)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:176)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:139)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n"
      },
      "dateCreated": "Apr 23, 2016 11:34:29 AM",
      "dateStarted": "Apr 23, 2016 11:34:43 AM",
      "dateFinished": "Apr 23, 2016 11:34:44 AM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n## Dynamic Forms can do lots of cool things, but basically this\n\n`Hello ",
      "dateUpdated": "Apr 25, 2016 8:56:18 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461592544226_690082231",
      "id": "20160425-085544_674234949",
      "dateCreated": "Apr 25, 2016 8:55:44 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md \n\n## Zeppelin `ResourcePool` for sharing objects between interpreters",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 9:55:07 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461367163921_-1627803720",
      "id": "20160422-181923_811496485",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eZeppelin \u003ccode\u003eResourcePool\u003c/code\u003e for sharing objects between interpreters\u003c/h2\u003e\n"
      },
      "dateCreated": "Apr 22, 2016 6:19:23 PM",
      "dateStarted": "Apr 23, 2016 9:54:48 AM",
      "dateFinished": "Apr 23, 2016 9:54:48 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Flink accesses the resourcePool",
      "text": "%flink\n// for flink we have to declare declare the resource pool\nimport org.apache.zeppelin.interpreter.InterpreterContext\n\nval resourcePool \u003d InterpreterContext.get().getResourcePool()",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:54:47 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": true,
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461344433851_720855603",
      "id": "20160422-120033_449495135",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import org.apache.zeppelin.interpreter.InterpreterContext\nresourcePool: org.apache.zeppelin.resource.ResourcePool \u003d org.apache.zeppelin.resource.DistributedResourcePool@6322c4ef\n"
      },
      "dateCreated": "Apr 22, 2016 12:00:33 PM",
      "dateStarted": "Apr 23, 2016 11:54:15 AM",
      "dateFinished": "Apr 23, 2016 11:54:16 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Flink puts something in the resourcePool",
      "text": "%flink\n// Put a variable in the resource pool\nval foo \u003d \"bar\"\nresourcePool.put(\"foo\", \"bar\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:54:48 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461345880526_-1647517125",
      "id": "20160422-122440_1548253589",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "foo: String \u003d bar\n"
      },
      "dateCreated": "Apr 22, 2016 12:24:40 PM",
      "dateStarted": "Apr 23, 2016 11:54:18 AM",
      "dateFinished": "Apr 23, 2016 11:54:19 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Spark fishes it out of the resourcePool",
      "text": "%spark\n\n// Spark has some built in wrapper. Let\u0027s get \"foo\" from the resource pool \nprintln(\"foo is: \"+ z.get(\"foo\"))",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:54:48 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461345965097_342727639",
      "id": "20160422-122605_65082483",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "foo is: bar\n"
      },
      "dateCreated": "Apr 22, 2016 12:26:05 PM",
      "dateStarted": "Apr 23, 2016 11:54:21 AM",
      "dateFinished": "Apr 23, 2016 11:54:21 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\nz.put(\"foo2\", List(1,2,3))\n\n\n",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:55:27 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461366997039_-246184099",
      "id": "20160422-181637_1234238046",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": ""
      },
      "dateCreated": "Apr 22, 2016 6:16:37 PM",
      "dateStarted": "Apr 23, 2016 11:55:27 AM",
      "dateFinished": "Apr 23, 2016 11:55:28 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%flink\n\nval foo2 \u003d resourcePool.get(\"foo2\").get();\nprintln(\"foo2 is: \" + foo2)",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:55:30 AM",
      "config": {
        "colWidth": 6.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461366841810_1875859327",
      "id": "20160422-181401_902830897",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "foo2: Object \u003d List(1, 2, 3)\nfoo2 is: List(1, 2, 3)\n"
      },
      "dateCreated": "Apr 22, 2016 6:14:01 PM",
      "dateStarted": "Apr 23, 2016 11:55:31 AM",
      "dateFinished": "Apr 23, 2016 11:55:31 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Scala to Python as well.",
      "text": "%pyspark\n\nprint \"foo: \", z.get(\"foo\"), \",foo2: \", z.get(\"foo2\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:56:42 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461430506867_737660933",
      "id": "20160423-115506_1619759829",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "foo:  bar ,foo2:  List(1, 2, 3)\n"
      },
      "dateCreated": "Apr 23, 2016 11:55:06 AM",
      "dateStarted": "Apr 23, 2016 11:56:42 AM",
      "dateFinished": "Apr 23, 2016 11:56:42 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n## Build in Version Control\n\nClick the little button at the top.\n\nThrough clever use of shell `%sh` interpretter and notebook scheduling could auto-commit nightly.",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 9:59:42 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461423356057_297790449",
      "id": "20160423-095556_1862629220",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eBuild in Version Control\u003c/h2\u003e\n\u003cp\u003eClick the little button at the top.\u003c/p\u003e\n\u003cp\u003eThrough clever use of shell \u003ccode\u003e%sh\u003c/code\u003e interpretter and notebook scheduling could auto-commit nightly.\u003c/p\u003e\n"
      },
      "dateCreated": "Apr 23, 2016 9:55:56 AM",
      "dateStarted": "Apr 23, 2016 9:59:38 AM",
      "dateFinished": "Apr 23, 2016 9:59:38 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n#Collaboratoin Among Apache Products\n",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:28:11 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424430327_-1240884464",
      "id": "20160423-101350_339462392",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch1\u003eCollaboratoin Among Apache Products\u003c/h1\u003e\n"
      },
      "dateCreated": "Apr 23, 2016 10:13:50 AM",
      "dateStarted": "Apr 23, 2016 11:28:07 AM",
      "dateFinished": "Apr 23, 2016 11:28:07 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Flink Scala-Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://flink.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:06:42 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424805642_1648695267",
      "id": "20160423-102005_369632679",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://flink.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:20:05 AM",
      "dateStarted": "Apr 23, 2016 11:04:13 AM",
      "dateFinished": "Apr 23, 2016 11:04:14 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Spark Scala, Python, R, and SQL Shells",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://spark.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")\n",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:07:08 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424800194_691440004",
      "id": "20160423-102000_1567700027",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://spark.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:20:00 AM",
      "dateStarted": "Apr 23, 2016 11:04:21 AM",
      "dateFinished": "Apr 23, 2016 11:04:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Alluxio (Tachyon) Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://alluxio.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:16:37 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461423490461_-1608670476",
      "id": "20160423-095810_684960260",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://alluxio.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 9:58:10 AM",
      "dateStarted": "Apr 23, 2016 11:05:24 AM",
      "dateFinished": "Apr 23, 2016 11:05:25 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "PostgreSQL Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://www.postgresql.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")\n",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:11:33 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461423637806_-1608622859",
      "id": "20160423-100037_1854895278",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://www.postgresql.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:00:37 AM",
      "dateStarted": "Apr 23, 2016 11:08:22 AM",
      "dateFinished": "Apr 23, 2016 11:08:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Hadoop Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://hadoop.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:09:24 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461423783091_893950909",
      "id": "20160423-100303_944662723",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://hadoop.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:03:03 AM",
      "dateStarted": "Apr 23, 2016 11:09:06 AM",
      "dateFinished": "Apr 23, 2016 11:09:06 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Phoenix Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"https://phoenix.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:10:20 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461423853257_-313083011",
      "id": "20160423-100413_1725782238",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"https://phoenix.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:04:13 AM",
      "dateStarted": "Apr 23, 2016 11:09:56 AM",
      "dateFinished": "Apr 23, 2016 11:09:57 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Ignite Scala-Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"https://ignite.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:11:31 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461423907186_2134212797",
      "id": "20160423-100507_1475069776",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"https://ignite.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:05:07 AM",
      "dateStarted": "Apr 23, 2016 11:11:08 AM",
      "dateFinished": "Apr 23, 2016 11:11:09 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Tajo Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://tajo.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 24, 2016 7:19:25 PM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461423932600_846104128",
      "id": "20160423-100532_1318836494",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://tajo.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:05:32 AM",
      "dateStarted": "Apr 23, 2016 11:12:41 AM",
      "dateFinished": "Apr 23, 2016 11:12:41 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Lens Scala Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"https://lens.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:19:38 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461423987719_471956342",
      "id": "20160423-100627_1427124652",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"https://lens.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:06:27 AM",
      "dateStarted": "Apr 23, 2016 11:13:59 AM",
      "dateFinished": "Apr 23, 2016 11:13:59 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Cassandra Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://cassandra.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:19:41 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424234024_194120019",
      "id": "20160423-101034_1522650396",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://cassandra.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:10:34 AM",
      "dateStarted": "Apr 23, 2016 11:15:45 AM",
      "dateFinished": "Apr 23, 2016 11:15:45 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Linux Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://linuxcommand.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:19:34 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424282567_-1005850504",
      "id": "20160423-101122_66726062",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://linuxcommand.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:11:22 AM",
      "dateStarted": "Apr 23, 2016 11:18:26 AM",
      "dateFinished": "Apr 23, 2016 11:18:26 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Kylin Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://kylin.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:19:43 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424316387_2052011161",
      "id": "20160423-101156_501790067",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://kylin.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:11:56 AM",
      "dateStarted": "Apr 23, 2016 11:19:22 AM",
      "dateFinished": "Apr 23, 2016 11:19:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "ElasticSearch",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"https://www.elastic.co/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 8:59:07 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424386170_-1996023962",
      "id": "20160423-101306_1384421770",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"https://www.elastic.co/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:13:06 AM",
      "dateStarted": "Apr 23, 2016 11:20:51 AM",
      "dateFinished": "Apr 23, 2016 11:20:52 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "HBase Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"https://hbase.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:27:36 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424410498_235950380",
      "id": "20160423-101330_825340335",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"https://hbase.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:13:30 AM",
      "dateStarted": "Apr 23, 2016 11:21:41 AM",
      "dateFinished": "Apr 23, 2016 11:21:41 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Markdown (markdown4j)",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"https://code.google.com/archive/p/markdown4j/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 23, 2016 11:27:38 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461428517140_636895363",
      "id": "20160423-112157_36896382",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"https://code.google.com/archive/p/markdown4j/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 11:21:57 AM",
      "dateStarted": "Apr 23, 2016 11:23:57 AM",
      "dateFinished": "Apr 23, 2016 11:23:57 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Geode Shell",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"http://geode.incubator.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 8:59:23 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461592692059_1635257037",
      "id": "20160425-085812_695378429",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"http://geode.incubator.apache.org/\" width\u003d480 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 25, 2016 8:58:12 AM",
      "dateStarted": "Apr 25, 2016 8:59:20 AM",
      "dateFinished": "Apr 25, 2016 8:59:20 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Connect to anything with JDBC and a Jar",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"https://en.wikipedia.org/wiki/Java_Database_Connectivity\" width\u003d1020 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 8:59:31 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424398345_-1256121179",
      "id": "20160423-101318_1943911183",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"https://en.wikipedia.org/wiki/Java_Database_Connectivity\" width\u003d1020 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 10:13:18 AM",
      "dateStarted": "Apr 23, 2016 11:25:54 AM",
      "dateFinished": "Apr 23, 2016 11:25:54 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "... or hell, just connect to anything.",
      "text": "print(\"%html \" + \"\"\"\u003ciframe src\u003d\"https://zeppelin.incubator.apache.org/docs/latest/development/writingzeppelininterpreter.html\" width\u003d1020 height\u003d320\u003e\u003c/iframe\u003e\"\"\")",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 8:59:40 AM",
      "config": {
        "colWidth": 4.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461428759790_-2071202716",
      "id": "20160423-112559_2025220645",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ciframe src\u003d\"https://zeppelin.incubator.apache.org/docs/latest/development/writingzeppelininterpreter.html\" width\u003d1020 height\u003d320\u003e\u003c/iframe\u003e"
      },
      "dateCreated": "Apr 23, 2016 11:25:59 AM",
      "dateStarted": "Apr 23, 2016 11:27:22 AM",
      "dateFinished": "Apr 23, 2016 11:27:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461428916682_1542605785",
      "id": "20160423-112836_1324431413",
      "dateCreated": "Apr 23, 2016 11:28:36 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n#Intra-organizational collaboration\n\n- ETL\n- Docs\n- FlinkML bench testing\n- Docs\n- Datascientist of Python\n- Docs\n- Scala Spark to build thing\n- Angular Visualizatoin\n- Export for Sales",
      "dateUpdated": "Apr 23, 2016 10:54:41 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461424425201_1872903708",
      "id": "20160423-101345_1528669383",
      "dateCreated": "Apr 23, 2016 10:13:45 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\n### Project *Spring Gale* overview:\n\nWe want to investigate how weather affects Divy Bike useage in Chicago. \n\n-[ ] ETL NOAA Weather (2013-2015)\n-[ ] ETL Divy Data (2013-2015)\n-[ ] Do some witchcraft\n-[ ] Package for sales guys\n\n**Trevor** *2016-04-25* [Apache Geode](http://geode.incubator.apache.org/) seems like an interesting place to store the NOAA weather data, it\u0027s nice and geo-queriable.\n**John** *2016-04-25* Yea, but we already have a nice Spark ETL.  \n**Jill** *2016-04-25* I think Geode will be a good place to store some competitve data though. Let\u0027s set up the Geode anyway, use the Spark ETL bc it\u0027s already baked. We can stress test Geode with the NOAA data and see how it performs.\n\n",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 9:46:22 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461592827415_-32462523",
      "id": "20160425-090027_934083706",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch3\u003eProject \u003cem\u003eSpring Gale\u003c/em\u003e overview:\u003c/h3\u003e\n\u003cp\u003eWe want to investigate how weather affects Divy Bike useage in Chicago.\u003c/p\u003e\n\u003cp\u003e-[ ] ETL NOAA Weather (2013-2015)\n\u003cbr  /\u003e-[ ] ETL Divy Data (2013-2015)\n\u003cbr  /\u003e-[ ] Do some witchcraft\n\u003cbr  /\u003e-[ ] Package for sales guys\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTrevor\u003c/strong\u003e \u003cem\u003e2016-04-25\u003c/em\u003e \u003ca href\u003d\"http://geode.incubator.apache.org/\"\u003eApache Geode\u003c/a\u003e seems like an interesting place to store the NOAA weather data, it\u0027s nice and geo-queriable.\n\u003cbr  /\u003e\u003cstrong\u003eJohn\u003c/strong\u003e \u003cem\u003e2016-04-25\u003c/em\u003e Yea, but we already have a nice Spark ETL.\n\u003cbr  /\u003e\u003cstrong\u003eJill\u003c/strong\u003e \u003cem\u003e2016-04-25\u003c/em\u003e I think Geode will be a good place to store some competitve data though. Let\u0027s set up the Geode anyway, use the Spark ETL bc it\u0027s already baked. We can stress test Geode with the NOAA data and see how it performs.\u003c/p\u003e\n"
      },
      "dateCreated": "Apr 25, 2016 9:00:27 AM",
      "dateStarted": "Apr 25, 2016 9:46:23 AM",
      "dateFinished": "Apr 25, 2016 9:46:23 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Download NOAA Data",
      "text": "%sh\nmkdir ../data/noaa\nwget \"ftp://anonymous:foo@ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/2013.csv.gz\" -O ../data/noaa/2013.csv.gz\nwget \"ftp://anonymous:foo@ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/2014.csv.gz\" -O ../data/noaa/2014.csv.gz\nwget \"ftp://anonymous:foo@ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/2015.csv.gz\" -O ../data/noaa/2015.csv.gz\nwget \"ftp://anonymous:foo@ftp.ncdc.noaa.gov/pub/data/ghcn/daily/ghcnd-stations.txt\" -O ../data/noaa/ghcnd-stations.txt\ncd ../data/noaa\ngunzip *gz\nls\n",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 10:17:05 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/sh",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461597365210_1293279253",
      "id": "20160425-101605_201836914",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "2013.csv\n2014.csv\n2015.csv\nghcnd-stations.txt\n"
      },
      "dateCreated": "Apr 25, 2016 10:16:05 AM",
      "dateStarted": "Apr 25, 2016 10:16:15 AM",
      "dateFinished": "Apr 25, 2016 10:16:15 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n\nFormant of `ghcnd-stations.txt` from [ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt](ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt)\n\nIV. FORMAT OF \"ghcnd-stations.txt\"\n\n```\n------------------------------\nVariable   Columns   Type\n------------------------------\nID            1-11   Character\nLATITUDE     13-20   Real\nLONGITUDE    22-30   Real\nELEVATION    32-37   Real\nSTATE        39-40   Character\nNAME         42-71   Character\nGSN FLAG     73-75   Character\nHCN/CRN FLAG 77-79   Character\nWMO ID       81-85   Character\n------------------------------\n```",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 10:22:41 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461597686905_-832515675",
      "id": "20160425-102126_333489957",
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eFormant of \u003ccode\u003eghcnd-stations.txt\u003c/code\u003e from \u003ca href\u003d\"ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt\"\u003eftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003eIV. FORMAT OF \u0026ldquo;ghcnd-stations.txt\u0026rdquo;\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e------------------------------\nVariable   Columns   Type\n------------------------------\nID            1-11   Character\nLATITUDE     13-20   Real\nLONGITUDE    22-30   Real\nELEVATION    32-37   Real\nSTATE        39-40   Character\nNAME         42-71   Character\nGSN FLAG     73-75   Character\nHCN/CRN FLAG 77-79   Character\nWMO ID       81-85   Character\n------------------------------\n\u003c/code\u003e\u003c/pre\u003e\n"
      },
      "dateCreated": "Apr 25, 2016 10:21:26 AM",
      "dateStarted": "Apr 25, 2016 10:22:41 AM",
      "dateFinished": "Apr 25, 2016 10:22:41 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n\ncase class GroundStation(id: String, )\nsc.textFile(\"file:///home/rawkintrevo/data/noaa/ghcnd-stations.txt\").take(20).foreach(println)",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 10:19:52 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461596021203_-715622281",
      "id": "20160425-095341_2054410219",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "ACW00011604  17.1167  -61.7833   10.1    ST JOHNS COOLIDGE FLD                       \nACW00011647  17.1333  -61.7833   19.2    ST JOHNS                                    \nAE000041196  25.3330   55.5170   34.0    SHARJAH INTER. AIRP            GSN     41196\nAEM00041194  25.2550   55.3640   10.4    DUBAI INTL                             41194\nAEM00041217  24.4330   54.6510   26.8    ABU DHABI INTL                         41217\nAEM00041218  24.2620   55.6090  264.9    AL AIN INTL                            41218\nAF000040930  35.3170   69.0170 3366.0    NORTH-SALANG                   GSN     40930\nAFM00040938  34.2100   62.2280  977.2    HERAT                                  40938\nAFM00040948  34.5660   69.2120 1791.3    KABUL INTL                             40948\nAFM00040990  31.5000   65.8500 1010.0    KANDAHAR AIRPORT                       40990\nAG000060390  36.7167    3.2500   24.0    ALGER-DAR EL BEIDA             GSN     60390\nAG000060590  30.5667    2.8667  397.0    EL-GOLEA                       GSN     60590\nAG000060611  28.0500    9.6331  561.0    IN-AMENAS                      GSN     60611\nAG000060680  22.8000    5.4331 1362.0    TAMANRASSET                    GSN     60680\nAGE00135039  35.7297    0.6500   50.0    ORAN-HOPITAL MILITAIRE                      \nAGE00147704  36.9700    7.7900  161.0    ANNABA-CAP DE GARDE                         \nAGE00147705  36.7800    3.0700   59.0    ALGIERS-VILLE/UNIVERSITE                    \nAGE00147706  36.8000    3.0300  344.0    ALGIERS-BOUZAREAH                           \nAGE00147707  36.8000    3.0400   38.0    ALGIERS-CAP CAXINE                          \nAGE00147708  36.7200    4.0500  222.0    TIZI OUZOU                             60395\n"
      },
      "dateCreated": "Apr 25, 2016 9:53:41 AM",
      "dateStarted": "Apr 25, 2016 10:19:22 AM",
      "dateFinished": "Apr 25, 2016 10:19:23 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%spark\n// For parsing Stations\n// ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt\n// For parsing Observations\n// ftp://ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/readme.txt\n\nimport org.apache.spark.SparkFiles\n\nval dataSource \u003d \"ftp://anonymous:foo@ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/1768.csv.gz\"\nsc.addFile(dataSource)\nvar fileName \u003d SparkFiles.get(dataSource.split(\"/\").last)\nvar file \u003d sc.textFile(fileName)\n\nval obsText \u003d sc.textFile(fileName)\n",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 9:29:56 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461593160724_-102226312",
      "id": "20160425-090600_2131180081",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "import org.apache.spark.SparkFiles\ndataSource: String \u003d ftp://anonymous:foo@ftp.ncdc.noaa.gov/pub/data/ghcn/daily/by_year/1768.csv.gz\nfileName: String \u003d /tmp/spark-943b7ef1-0194-428f-8b48-f5e0d469e70e/userFiles-06449ae8-efee-4ce0-90f3-8705b58ec6ab/1768.csv.gz\nfile: org.apache.spark.rdd.RDD[String] \u003d /tmp/spark-943b7ef1-0194-428f-8b48-f5e0d469e70e/userFiles-06449ae8-efee-4ce0-90f3-8705b58ec6ab/1768.csv.gz MapPartitionsRDD[33] at textFile at \u003cconsole\u003e:37\nobsText: org.apache.spark.rdd.RDD[String] \u003d /tmp/spark-943b7ef1-0194-428f-8b48-f5e0d469e70e/userFiles-06449ae8-efee-4ce0-90f3-8705b58ec6ab/1768.csv.gz MapPartitionsRDD[35] at textFile at \u003cconsole\u003e:37\norg.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 5.0 failed 4 times, most recent failure: Lost task 0.3 in stage 5.0 (TID 9, apacheCon1.lan): java.io.IOException: The temporary job-output directory file:/$HOME/weatherData.csv/_temporary doesn\u0027t exist!\n\tat org.apache.hadoop.mapred.FileOutputCommitter.getWorkPath(FileOutputCommitter.java:250)\n\tat org.apache.hadoop.mapred.FileOutputFormat.getTaskOutputPath(FileOutputFormat.java:244)\n\tat org.apache.hadoop.mapred.TextOutputFormat.getRecordWriter(TextOutputFormat.java:116)\n\tat org.apache.spark.SparkHadoopWriter.open(SparkHadoopWriter.scala:91)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1193)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1185)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:66)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:89)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:214)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\nDriver stacktrace:\n\tat org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:1431)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1419)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:1418)\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)\n\tat org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:1418)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:799)\n\tat org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:799)\n\tat scala.Option.foreach(Option.scala:236)\n\tat org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:799)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:1640)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1599)\n\tat org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:1588)\n\tat org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:48)\n\tat org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:620)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1832)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1845)\n\tat org.apache.spark.SparkContext.runJob(SparkContext.scala:1922)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply$mcV$sp(PairRDDFunctions.scala:1213)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply(PairRDDFunctions.scala:1156)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply(PairRDDFunctions.scala:1156)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:316)\n\tat org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopDataset(PairRDDFunctions.scala:1156)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply$mcV$sp(PairRDDFunctions.scala:1060)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply(PairRDDFunctions.scala:1026)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply(PairRDDFunctions.scala:1026)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:316)\n\tat org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:1026)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply$mcV$sp(PairRDDFunctions.scala:952)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply(PairRDDFunctions.scala:952)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply(PairRDDFunctions.scala:952)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:316)\n\tat org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:951)\n\tat org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply$mcV$sp(RDD.scala:1457)\n\tat org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply(RDD.scala:1436)\n\tat org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply(RDD.scala:1436)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:316)\n\tat org.apache.spark.rdd.RDD.saveAsTextFile(RDD.scala:1436)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:40)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:45)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:47)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:49)\n\tat $iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:51)\n\tat $iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:53)\n\tat $iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:55)\n\tat $iwC.\u003cinit\u003e(\u003cconsole\u003e:57)\n\tat \u003cinit\u003e(\u003cconsole\u003e:59)\n\tat .\u003cinit\u003e(\u003cconsole\u003e:63)\n\tat .\u003cclinit\u003e(\u003cconsole\u003e)\n\tat .\u003cinit\u003e(\u003cconsole\u003e:7)\n\tat .\u003cclinit\u003e(\u003cconsole\u003e)\n\tat $print(\u003cconsole\u003e)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.apache.spark.repl.SparkIMain$ReadEvalPrint.call(SparkIMain.scala:1065)\n\tat org.apache.spark.repl.SparkIMain$Request.loadAndRun(SparkIMain.scala:1346)\n\tat org.apache.spark.repl.SparkIMain.loadAndRunReq$1(SparkIMain.scala:840)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:871)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:819)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpretInput(SparkInterpreter.java:812)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:755)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:748)\n\tat org.apache.zeppelin.interpreter.ClassloaderInterpreter.interpret(ClassloaderInterpreter.java:57)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:93)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:345)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:176)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:139)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.io.IOException: The temporary job-output directory file:/$HOME/weatherData.csv/_temporary doesn\u0027t exist!\n\tat org.apache.hadoop.mapred.FileOutputCommitter.getWorkPath(FileOutputCommitter.java:250)\n\tat org.apache.hadoop.mapred.FileOutputFormat.getTaskOutputPath(FileOutputFormat.java:244)\n\tat org.apache.hadoop.mapred.TextOutputFormat.getRecordWriter(TextOutputFormat.java:116)\n\tat org.apache.spark.SparkHadoopWriter.open(SparkHadoopWriter.scala:91)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1193)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1$$anonfun$13.apply(PairRDDFunctions.scala:1185)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:66)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:89)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:214)\n\t... 3 more\n\n"
      },
      "dateCreated": "Apr 25, 2016 9:06:00 AM",
      "dateStarted": "Apr 25, 2016 9:29:14 AM",
      "dateFinished": "Apr 25, 2016 9:29:18 AM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "case class Observation(station_id: String, date: String, observation_type: String, observation_value: Float, observation_time: String)\nval observations \u003d obsText.map(s\u003d\u003es.split(\",\")).map(s\u003d\u003e Observation(s(0), s(1), s(2), s(3).toFloat, s(4)))\nval avgTemps \u003d observations.filter(s \u003d\u003e s.observation_type \u003d\u003d \"TMAX\").map(s \u003d\u003e (s.station_id, (s.observation_value,1))).reduceByKey((running,next_val) \u003d\u003e (running._1 + (next_val._1-running._1)/ (running._2 + 1), running._2 + next_val._2))\n\navgTemps.map(s \u003d\u003e (s._1, s._2._1/10 * 9/5+32 )).take(5).foreach(println)",
      "authenticationInfo": {},
      "dateUpdated": "Apr 25, 2016 9:30:16 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461594307543_-303590670",
      "id": "20160425-092507_1038284370",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "defined class Observation\nobservations: org.apache.spark.rdd.RDD[Observation] \u003d MapPartitionsRDD[46] at map at \u003cconsole\u003e:43\navgTemps: org.apache.spark.rdd.RDD[(String, (Float, Int))] \u003d ShuffledRDD[49] at reduceByKey at \u003cconsole\u003e:45\n(ITE00100554,58.26918)\n"
      },
      "dateCreated": "Apr 25, 2016 9:25:07 AM",
      "dateStarted": "Apr 25, 2016 9:30:16 AM",
      "dateFinished": "Apr 25, 2016 9:30:17 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1461594591697_-116776728",
      "id": "20160425-092951_800822925",
      "dateCreated": "Apr 25, 2016 9:29:51 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "[TALK-1] Intro",
  "id": "2BKF4V99Y",
  "angularObjects": {
    "2BKB415EK": [],
    "2BJZN9MK9": [],
    "2BHH47YN2": [],
    "2BGMT4YWZ": [],
    "2BGJ9KNKP": [],
    "2BG19X98R": [],
    "2BKH6MZXH": [],
    "2BGDD9PE3": [],
    "2BKM1ZNR5": [],
    "2BJ4YZU75": [],
    "2BH64UCCX": [],
    "2BKFX8337": [],
    "2BHKRTP6A": [],
    "2BGQ1DACN": [],
    "2BGGAAN2P": [],
    "2BG83QEE9": [],
    "2BGC8VWA5": [],
    "2BHA47BG2": []
  },
  "config": {},
  "info": {}
}